buildscript {

    ext.kotlin_version = '1.3.72'

//    repositories {
//        mavenCentral()
//        jcenter()
//    }
//    dependencies {
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.intellij.plugins:gradle-intellij-plugin:0.7.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
//    id "org.jetbrains.intellij" version "0.4.16"
    id "org.jetbrains.intellij" version "0.7.2"
}

sourceCompatibility = 1.8
targetCompatibility = 1.8



apply plugin: 'java'
apply plugin: 'kotlin'


repositories {
    mavenCentral()
    jcenter()
}

sourceSets {
    main {
        resources {
            exclude 'website/adb_operations_popup.png'
            exclude 'website/find_actions.png'
            exclude 'website/debug_howto.png'
        }
    }
}

if (!hasProperty('StudioCompilePath')) {
    throw new GradleException("No StudioCompilePath value was set, please create gradle.properties file")
}

intellij {
    pluginName 'adb_idea'
    updateSinceUntilBuild false

    intellij.localPath = project.hasProperty("StudioRunPath") ? StudioRunPath : StudioCompilePath
}

group 'com.darshan.ezylogin'

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
//    compile "org.jooq:joor-java-8:0.9.13"
    compileOnly fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    compileOnly fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])

    testImplementation 'junit:junit:4.13.2'
    testImplementation fileTree(dir: "$StudioCompilePath/plugins/android/lib", include: ['*.jar'])
    testImplementation fileTree(dir: "$StudioCompilePath/lib", include: ['*.jar'])
    testImplementation "org.mockito:mockito-core:3.8.0"
    testImplementation "com.google.truth:truth:1.1.2"


}

task(verifySetup) {
    doLast {
        def ideaJar = "$StudioCompilePath/lib/idea.jar"
        if (!file(ideaJar).exists()) {
            throw new GradleException("$ideaJar not found, set StudioCompilePath in gradle.properties")
        }
    }
}


compileJava.dependsOn verifySetup
